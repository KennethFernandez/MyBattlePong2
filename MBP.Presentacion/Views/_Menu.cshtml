@{
    var menus = new[]
                {
                   new { LinkText="Catalogo", ActionName="Catalogo",ControllerName="Catalogo",Roles="Administrador"  },
                   new { LinkText="Poderes", ActionName="GestionarPoderes",ControllerName="GestionarPoderes",Roles="Administrador"  },
                   new { LinkText="Perfil", ActionName="Perfil",ControllerName="Perfil",Roles="Administrador"  },
                   new { LinkText="Salir", ActionName="LogOff",ControllerName="Inicio",Roles="Administrador"  },
                   new { LinkText="Perfil", ActionName="Perfil",ControllerName="Perfil",Roles="Moderador"  },
                   new { LinkText="ConfigPartVido", ActionName="Perfil",ControllerName="Perfil",Roles="Moderador"  },
                   new { LinkText="IniciarPartVivo", ActionName="Perfil",ControllerName="Perfil",Roles="Moderador"  },
                   new { LinkText="Salir", ActionName="LogOff",ControllerName="Inicio",Roles="Moderador"  },
                   new { LinkText="Perfil", ActionName="Perfil",ControllerName="Perfil",Roles="Jugador"  },
                   new { LinkText="CrearPartida", ActionName="Perfil",ControllerName="Perfil",Roles="Jugador"  },
                   new { LinkText="BuscarAceptarPartida", ActionName="Perfil",ControllerName="Perfil",Roles="Jugador"  },
                   new { LinkText="Salir", ActionName="LogOff",ControllerName="Inicio",Roles="Jugador"  }


                };
}

<ul id="menu" class="MenuBarHorizontal">
    @if (true)
    {
        String[] roles = new String[] { (string)Session["rol"] };

        var links = from item in menus
                    where item.Roles.Split(new String[] { "," }, StringSplitOptions.RemoveEmptyEntries)
                    .Any(x => roles.Contains(x) || x == "All")
                    select item;
        foreach (var link in links)
        {
            @:
            <li> @Html.ActionLink(link.LinkText, link.ActionName, link.ControllerName)</li>
        }
    }

</ul> 
